<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Abstract_incidence_structures">
<Heading>Abstract incidence structures</Heading>

<Section Label="Chapter_Abstract_incidence_structures_Section_Mathematical_background">
<Heading>Mathematical background</Heading>

<P/>
We follow the notation and the terminology of the monograph <Cite Key="DesTheory1" />.
<P/>
An <Emph>incidence structure</Emph> is a triple <Math>(V,\mathbf{B},I)</Math> where <Math>V</Math> and <Math>\mathbf{B}</Math> are any two disjoint sets and <Math>I</Math> is a binary relation between <Math>V</Math> and <Math>\mathbf{B}</Math>, i.e. <Math>I\subseteq V\times \mathbf{B}</Math>. The elements of <Math>V</Math> will be called <Emph>points</Emph>, those of <Math>\mathbf{B}</Math> <Emph>blocks</Emph> and those of <Math>I</Math> <Emph>flags.</Emph> Instead of <Math>(p, B) \in I</Math>, we will simply write <Math>p I B</Math> and use such geometric language as "the point <Math>p</Math> lies on the block <Math>B</Math>", "<Math>B</Math> passes through <Math>p</Math>", "<Math>p</Math> and <Math>B</Math> are incident", etc.
<P/>
The <Emph>trace</Emph> of a block <Math>B</Math> is the set <Math>\{ x \in V : x I B\}</Math> of the points incident with <Math>B</Math>. The <Emph>trace</Emph> of a point <Math>p</Math> is the set <Math>\{ B \in \mathbf{B} : p I B\}</Math> of the blocks incident with <Math>p</Math>. An incidence structure is called <Emph>simple</Emph> if the traces of distinct blocks are distinct. For any simple incidence structure, we can (and usually will) identify each block <Math>B</Math> with its trace and the incidence relation <Math>I</Math> with the membership relation <Math>\in</Math>.
<P/>
Let <Math>(V,\mathbf{B},I)</Math> and label the points as <Math>p_1,\ldots,p_v</Math> and the blocks <Math>B_1,\ldots,B_b</Math>. Then the <Math>b\times v</Math> matrix <Math>M=(m_{ij})</Math> defined by <Math>m_{ij}=1</Math> if <Math>p_j I B_i</Math>, <Math>m_{ij}=0</Math> otherwise, is called the <Emph>incidence matrix</Emph> of the structure. The row of <Math>M</Math> belonging to a block <Math>B</Math> is the <Emph>incidence vector</Emph> of <Math>B</Math>.
<P/>
Let <Math>(V,\mathbf{B},I)</Math> and <Math>(V',\mathbf{B}',I')</Math> be incidence structures and let <Math>\pi:V\cup \mathbf{B} \to V'\cup \mathbf{B}'</Math> be a bijection. <Math>\pi</Math> is called an <Emph>isomorphism</Emph> if and only if it satisfies:
<P/>
<List>
<Item>
<Math>V^\pi =V'</Math> and <Math>\mathbf{B}^\pi =\mathbf{B}'</Math>;
</Item>
<Item>
<Math>p I B \Leftrightarrow p^\pi I' B^\pi</Math> for all <Math>p\in V</Math> and <Math>B\in \mathbf{B}</Math>.
</Item>
</List>
<P/>
In this case, the two incidence structures are said to be <Emph>isomorphic</Emph>. If <Math>(V,\mathbf{B},I)=(V',\mathbf{B}',I')</Math>, then <Math>\pi</Math> is called an <Emph>automorphism</Emph>.
<P/>
</Section>


<Section Label="Chapter_Abstract_incidence_structures_Section_Constructing_abstract_incidence_structures">
<Heading>Constructing abstract incidence structures</Heading>

<ManSection>
  <Filt Arg="object" Name="IsIncidenceStructure" Label="for IsObject"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
A &GAP; category of abstract incidence structures.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="pts,bls,incmat" Name="IncidenceStructureByIncidenceMatrix" />
 <Returns>The incidence structure object corresponding to the set <A>pts</A> of points and the list <A>bls</A> of blocks and the incidence matrix <A>incmat</A>. <A>incmat</A> must be a boolean matrix with <C>|bls|</C> rows and <C>|pts|</C> columns.
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="pts,bls,incmat" Name="IncidenceStructureByIncidenceMatrixNC" />
 <Description>
The non-checking version of the command <C>IncidenceStructureByIncidenceMatrix</C>.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="pts,bls" Name="IncidenceStructureByBlocks" />
 <Returns>The incidence structure object corresponding to the set <A>pts</A> of points and the list <A>bls</A> of blocks. The elements of <A>bls</A> must be subsets of <A>pts</A>.
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="s" Name="IsIndexBasedIncidenceStructure" Label="for IsIncidenceStructure"/>
 <Description>
We call the incident structre <A>s</A> <Emph>index based</Emph> if its set of points is the
integer range <C>[1..n]</C> and blocks are subsets of <C>[1..n]</C>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="s" Name="IsSimpleIncidenceStructure" Label="for IsIncidenceStructure"/>
 <Returns><K>true</K> if <A>s</A> is a simple incident structure.
</Returns>
 <Description>
An incident structure is said to be <Emph>simple</Emph> if each block is uniquely
determined by the set of points which are incident with it.
 </Description>
</ManSection>


<ManSection>
  <InfoClass Name="InfoIncidenceStructures" />
 <Description>
An infoclass for the package. Its default value is <Math>0</Math>.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Abstract_incidence_structures_Section_Methods_for_abstract_incidence_structures">
<Heading>Methods for abstract incidence structures</Heading>

<ManSection>
  <Attr Arg="s" Name="PointsOfIncidenceStructure" Label="for IsIncidenceStructure"/>
 <Returns>The list of points of the incidence structure <A>s</A>.
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="s" Name="BlocksOfIncidenceStructure" Label="for IsIncidenceStructure"/>
 <Returns>The list of blocks of the incidence structure <A>s</A>.
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="s,pt" Name="TraceOfPoint" Label="for IsIncidenceStructure, IsObject"/>
 <Returns>The list of blocks which are incident with <A>pt</A> in the incidence structure <A>s</A>.
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="s,bl" Name="TraceOfBlock" Label="for IsIncidenceStructure, IsObject"/>
 <Returns>The list of points which are incident with <A>bl</A> in the incidence structure <A>s</A>.
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="s" Name="AutomorphismGroup" Label="for IsIncidenceStructure"/>
 <Returns>The automorphism group of the incidence structure <A>s</A>.
</Returns>
 <Description>
The function computes the automorphism group of <A>s</A> with the help of
its incidence digraph.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="s1, s2" Name="Isomorphism" Label="for IsIncidenceStructure, IsIncidenceStructure"/>
 <Returns>An isomorphism between the incidence structures <A>s1</A> and <A>s1</A> if they are isomorphic, and <K>fail</K> otherwise.
</Returns>
 <Description>
The isomorphism is a bijection between the points sets and between the line sets of
the incidence structures <Math>S_1</Math> and <Math>S_2</Math> such that the incidence relations are
preserved. In this implementation, an isomorphism is given by a permutation <Math>\beta</Math>
of degree <Math>n+m</Math>, where <Math>n</Math> is the number of points and <Math>m</Math> is the number of lines.
The bijections defined by <Math>\beta</Math> are <Math>p[i]\mapsto p'[i^\beta]</Math> and <Math>b[j]
\mapsto b'[(j+n)^\beta-n]</Math>, where <Math>p[i]</Math>, <Math>p'[i']</Math> are points and <Math>b[j]</Math>, <Math>b'[j']</Math> are
blocks of <Math>S_1</Math>, <Math>S_2</Math>, respectively.
<P/>
Canonocal labellings, automorphisms and isomorphisms of incidence structures are
computed with the help of their <Emph>incidence graphs</Emph>, which is are bipartite graphs
with upper vertices the points and lower vertices the blocks. The computation
is done using the &GAP; package <Package>BlissInterface</Package> <Cite
Key="BlissInterface0.2" />.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Abstract_incidence_structures_Section_Examples">
<Heading>Examples</Heading>

<P/>
<Example><![CDATA[
gap> LoadPackage("IncidenceStructures",false);       
true
gap> s:=IncidenceStructureByBlocks([1..3],[[1],[1,2],[1,2,3]]);
<Incidence structure on 3 points>
gap> PointsOfIncidenceStructure(s);
[ 1, 2, 3 ]
gap> BlocksOfIncidenceStructure(s);
[ [ 1 ], [ 1, 2 ], [ 1, 2, 3 ] ]
gap> CanonicalLabellingOfIncidenceStructure(s);
(1,3)
gap> KnownAttributesOfObject(s);
[ "AutomorphismGroup", "IsIndexBasedIncidenceStructure", 
  "PointsOfIncidenceStructure", "BlocksOfIncidenceStructure", 
  "CanonicalLabellingOfIncidenceStructure" ]
gap> s:=IncidenceStructureByIncidenceMatrix( [1..4], "abcdef", 
>      [[true,true,false,false],
>      [true,false,true,false],
>      [true,false,false,true],
>      [false,true,true,false],
>      [false,true,false,true],
>      [false,false,true,true]]
> );
<Incidence structure on 4 points>
gap> TraceOfPoint(s,2);
"ade"
gap> TraceOfBlock(s,'c');
[ 1, 4 ]
gap> SetInfoLevel(InfoIncidenceStructures,1);
gap> CanonicalLabellingOfIncidenceStructure(s);
#I  BLISS_BIPARTITE_CANONICAL_LABELING called
(1,4)(2,3)(5,10,9)(6,8)
gap> StructureDescription(AutomorphismGroup(s));
"S4"
gap> SetInfoLevel(InfoIncidenceStructures,2);
gap> t:=IncidenceStructureByBlocks( "rozi", 
>      ["or","iz","rz","oi","ir","oz"] );                                               
<Incidence structure on 4 points>
gap> Isomorphism(s,t);
#I  BLISS_BIPARTITE_CANONICAL_LABELING called
#I  <outneigh> parameter for BLISS command: [ [ 2, 3 ], [ 1, 4 ], [ 3, 4 ], [ 1, 2 ], [ 1, 3 ], [ 2, 4 ] ]
#I  <iso>: ( 1, 3, 4)( 6, 7, 9, 8,10)
(1,3,4)(6,7,9,8,10)
gap> StructureDescription(AutomorphismGroup(t));
"S4"
]]></Example>


<P/>
</Section>


</Chapter>

