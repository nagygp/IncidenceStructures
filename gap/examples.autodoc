@Chapter Abstract incidence structures
@Section Examples

@BeginExampleSession
gap> LoadPackage("IncidenceStructures", false);
true
gap> 
gap> s:=IncidenceStructureByBlocks([1..3],[[1],[1,2],[1,2,3]]);
<Incidence structure on 3 points>
gap> PointsOfIncidenceStructure(s);
[ 1, 2, 3 ]
gap> BlocksOfIncidenceStructure(s);
[ [ 1 ], [ 1, 2 ], [ 1, 2, 3 ] ]
gap> CanonicalLabellingOfIncidenceStructure(s);
(1,3)
gap> KnownAttributesOfObject(s);
[ "IsIndexBasedIncidenceStructure", "PointsOfIncidenceStructure", 
  "BlocksOfIncidenceStructure", 
  "CanonicalLabellingOfIncidenceStructure" ]
gap> 
gap> s:=IncidenceStructureByIncidenceMatrix( [1..4], "abcdef", 
>     [[true,true,false,false],
>     [true,false,true,false],
>     [true,false,false,true],
>     [false,true,true,false],
>     [false,true,false,true],
>     [false,false,true,true]]
> );
<Incidence structure on 4 points>
gap> TraceOfPoint(s,2);
"ade"
gap> TraceOfBlock(s,'c');
[ 1, 4 ]
gap> 
gap> SetInfoLevel(InfoIncidenceStructures,1);
gap> CanonicalLabellingOfIncidenceStructure(s);
#I  GraphCanonicalLabelling@glabella called
(1,4)(2,3)(5,10,9)(6,8)
gap> StructureDescription(AutomorphismGroup@IncidenceStructures(s));
"S4"
gap> 
gap> SetInfoLevel(InfoIncidenceStructures,2);
gap> t:=IncidenceStructureByBlocks( "rozi", 
>     ["or","iz","rz","oi","ir","oz"] );
<Incidence structure on 4 points>
gap> Isomorphism@IncidenceStructures(s,t);
#I  GraphCanonicalLabellingNC@glabella called
#I  <outneigh> parameter for glabella command: [ [  ], [  ], [  ], [  ], [ 2, 3 ], [ 1, 4 ], [ 3, 4 ], [ 1, 2 ], 
  [ 1, 3 ], [ 2, 4 ] ]
#I  <iso>: ( 1, 3, 4)( 6, 7, 9, 8,10)
(1,3,4)(6,7,9,8,10)
gap> HashValue(s);
2786093497
gap> HashValue(t);
2786093497
gap> StructureDescription(AutomorphismGroup@IncidenceStructures(t));
"S4"
@EndExampleSession